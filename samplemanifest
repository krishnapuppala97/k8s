apiVersion: apps/v1
kind: Deployment
metadata:
  name: springbootdeployment
spec:
 replicas: 1
 selector:
  matchLabels:
   app: spring
 template:
  metadata:
   name: springpod
   labels:
    app: spring
  spec:
   containers:
   - name: springcon
     image: krishnapuppala97/spring_boot:34
     ports:
     - containerPort: 8080
     env:
     - name: MONGO_DB_HOSTNAME
       value: mongosvc
     - name: MONGO_DB_USERNAME
       value: devdb
     - name: MONGO_DB_PASSWORD
       value: dev123
---
apiVersion: v1
kind: Service
metadata:
  name: springservice
spec:
 type: NodePort
 selector:
   app: app
 ports:
 - port: 80
   targetPort: 8080
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mangoss
spec:
 replicas: 2
 serviceName: mongosvc
 selector:
  matchLabels:
   db: mongodb
 template:
   metadata:
    name: mondodb
    labels:
     db: mongodb
   spec:
    containers:
    - name: mongodb
      image: mongo
      ports:
      - containerPort: 27017
      env:
      - name: MONGO_INITDB_ROOT_USERNAME
        value: devdb
      - name: MONGO_INITDB_ROOT_PASSWORD
        value: dev123
      volumeMounts:
      - name: mongovol
        mountPath: "/data/db"
    volumeClaimTemplates:
     metadata:
      name: mongovol
     spec:
      accessModes: ["ReadWriteOnce"]
       #   storageClassName: Defalut
      resources:
       requests:
        storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
 name: mongosvc
spec:
 type: ClusterIP
 selector:
   db: mongodb
 ports:
 - port: 27017
   targetPort: 27017
